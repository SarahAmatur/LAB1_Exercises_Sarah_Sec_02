# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UrOgd3lP4mX1GV2v_TMGHgiOG2nD5Yyc

Ex-01
"""

n1 = int(input("Enter number 1: "))

n2 = int(input("Enter number 2: "))

product = n1*n2

if product > 1000:

 print(n1+n2)

else:

 print(product)

"""Ex-02"""

r=float(input("Input Radius : "))
area=3.14*r*r
perimeter=2*3.14*r
print("Area of Circle: ",area)
print("Perimeter of Circle: ",perimeter)

"""Ex-03"""

def compound_interest_2018_2_60_059 (principle, rate, time):
    result = principle * (pow((1 + rate / 100), time))
    return result


p = float(input("Enter the principal amount: "))
r = float(input("Enter the interest rate: "))
t = float(input("Enter the time in years: "))

amount = compound_interest_2018_2_60_059 (p, r, t)
interest = amount - p
print("Compound amount is %.2f" % amount)
print("Compound interest is %.2f" % interest)

"""Ex-04"""

n=int(input("enter n: "))

ans=n*(n + 1)*(2*n + 1)

ans=ans/6

print(ans)

"""Ex-05"""

def prime_find_2018_2_60_059(n,b):
 b=True
 
 for i in range(2, n-2,1 ):
     if(n%i==0):
      b=False
      print("It's not a prime number")
      break    

 if(b):
  print("It's a prime number")

n=int(input("enter a number: "))



prime_find_2018_2_60_059(n,True)

"""Ex-06"""

def Fibonacci(n):
    if n<= 0:
        print("Incorrect input")

    elif n == 1:
        return 0

    elif n == 2:
        return 1
    else:
        return Fibonacci(n-1)+Fibonacci(n-2)
 
n = int(input("Enter the number : "))
 
print(Fibonacci(n))

"""Ex-07"""

a=[11,23,45,53,100]

sum=0

def summation(sum):
 
        for i in range (0,len(a),1):
            sum+=a[i]
    
        return sum

print( summation(sum) )

"""Ex-08"""

a=[13,21,57,32,28]

sum=0

def summation(sum):
 
        for i in range (0,len(a),1):
            if(i%2==0):
             sum+=a[i]
    
        return sum

print( summation(sum) )

"""Ex-09"""

a=[]

n=int(input("Enter the number of elements: "))

for i in range (0,n,1):
        a.append(int(input()))
        

maximum=a[0]
minimum=a[0]

def max_2018_2_60_059(maximum):
    
    for i in range (0,len(a),1):
      if(a[i]>maximum):
          maximum=a[i]

    return maximum

def min_2018_2_60_059(mainimum):
    
    for i in range (0,len(a),1):
       if(mainimum>a[i]):
           mainimum=a[i]
           
    return mainimum

print( max_2018_2_60_059(maximum) )

print(min_2018_2_60_059(minimum))

"""Ex-10"""

a=[2,1,5,4,3]

x=sorted(a)

print(x[len(a)-2])

"""Ex-11"""

s=input("enter s: ")

for i in range (0,len(s),1):
    if(i%2==0):
        print(s[i])

"""Ex-12"""

def rem(s,n):
    
   list=[]
    
   for i in range(n,len(s),1):
       list.append(s[i])
             
   return list

s=input()
n=int(input())

print( rem(s,n) )

"""Ex-13"""

for i in range(N - M + 1): 
        j = 0
        while(j < M): 
            if (s[i + j] != sub[j]): 
                break
            j += 1
    
        if (j == M): 
            res += 1
            j = 0
        return res


string = "CSE303 is instructed by the faculties of the committee of CSE303 "
substring = "CSE303"
print("Count:", count(substring, string))



"""Ex-14"""

def palindrome_checker_2018_2_60_059(s,n):
    
   for i in range (0,(int(len(s)/2)),1):
        if(s[i]!=s[n-i-1]):
            return False
                   
                        
   return True

s=input()

print(palindrome_checker_2018_2_60_059(s,len(s)))

"""Ex-15"""

list1=[1,2,3,4,5,6]
list2=[7,8,9,10,11,12]
   
a=[]
b=[]

n=len(list1)

for i in range (0,n,1):
    if(list1[i]%2==0):
        a.append(list1[i])
    if(list2[i]%2==1):
        b.append(list2[i])
        
        
print(a)
print(b)